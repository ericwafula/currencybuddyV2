name: Configure and Sign App Bundle

on:
  workflow_call:
    inputs:
      create_google_json:
        description: 'Create google-services.json file'
        type: boolean
        required: false
        default: false
      extract_secrets:
        description: 'Extract secrets'
        type: boolean
        required: false
        default: false
      extract_release_notes:
        description: 'Extract release notes'
        type: boolean
        required: false
        default: false
      release-notes:
        description: 'Release notes for this version'
        type: string
        required: false
      build_with_gradle:
        description: 'Build with Gradle'
        type: boolean
        required: false
        default: false
      build_release_aab:
        description: 'Build Release AAB'
        type: boolean
        required: false
        default: false
      sign_release_aab:
        description: 'Sign Release AAB'
        type: boolean
        required: false
        default: false
      upload_mapping_file:
        description: 'Upload mapping file'
        type: boolean
        required: false
        default: false

jobs:
  config_and_sign_bundle:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Create google-services.json file
        if: ${{ inputs.create_google_json == true }}
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > app/google-services.json

      - name: Extract secrets
        if: ${{ inputs.extract_secrets == true }}
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase ${{ secrets.PASSPHRASE }} \
          --output secrets.tar secrets.gpg 
          tar xvf secrets.tar

      - name: Upload google-services.json
        if: ${{ inputs.create_google_json == true || inputs.extract_secrets == true }}
        uses: actions/upload-artifact@v4
        with:
          name: google-services
          path: app/google-services.json

#      - name: Upload Secrets
#        if: ${{ inputs.extract_secrets == true }}
#        uses: actions/upload-artifact@v4
#        with:
#          name: secrets

      - name: Inject API secrets
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> local.properties
          echo "CONVERTER_BASE_URL=${{ secrets.CONVERTER_BASE_URL }}" >> local.properties
          echo "CURRENCY_DETAILS_URL=${{ secrets.CURRENCY_DETAILS_URL }}" >> local.properties

      - name: Debug Local Properties
        run: cat local.properties || echo "local.properties not found!"

      - name: Upload Local Properties
        uses: actions/upload-artifact@v4
        with:
          name: local-properties
          path: local.properties

      - name: Extract release notes
        if: ${{ inputs.extract_release_notes == true }}
        run: |
          if [ -s whatsnew/whatsnew-en-US.txt ]; then
            echo -e "\n- ${{ github.event.inputs.release-notes }}" >> whatsnew/whatsnew-en-US.txt
          else
            echo "- ${{ github.event.inputs.release-notes }}" >> whatsnew/whatsnew-en-US.txt
          fi

      - name: Upload Release Notes
        if: ${{ inputs.extract_release_notes == true }}
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: whatsnew/whatsnew-en-US.txt

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        if: ${{ inputs.build_with_gradle == true }}
        run: ./gradlew build

      - name: Build Release AAB
        if: ${{ inputs.build_release_aab == true }}
        run: ./gradlew bundleRelease

      - name: Sign Release AAB
        if: ${{ inputs.sign_release_aab == true }}
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Upload Signed AAB
        if: ${{ inputs.sign_release_aab == true }}
        uses: actions/upload-artifact@v4
        with:
          name: signed-aab
          path: app/build/outputs/bundle/release/app-release.aab

      - name: Upload mapping.txt
        if: ${{ inputs.upload_mapping_file == true }}
        uses: actions/upload-artifact@v4
        with:
          name: mapping-file
          path: app/build/outputs/mapping/release/mapping.txt

      - name: Check and upload debug symbols
        if: ${{ inputs.upload_mapping_file == true }}
        run: |
          if [ -d "app/build/intermediates/merged_native_libs/release/out/lib" ]; then
            echo "Native debug symbols found, uploading..."
            echo "symbols_exist=true" >> $GITHUB_ENV
          else
            echo "No native debug symbols found."
            echo "symbols_exist=false" >> $GITHUB_ENV
          fi

      - name: Upload debug symbols
        if: env.symbols_exist == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: debug-symbols
          path: app/build/intermediates/merged_native_libs/release/out/lib